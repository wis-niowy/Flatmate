@using Flatmate.Helpers;
@model Flatmate.ViewModels.ExpenseManager.NewSingleExpenseViewModel

@{
    ViewData["Title"] = "NewSingleExpense";
}

<h2>NewSingleExpense</h2>

<div class="row">
    <div class="col-md-4">
        <form asp-action="NewSingleExpense">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ExpenseSubject"></label>
                <input asp-for="ExpenseSubject" class="form-control" />
                <span asp-validation-for="ExpenseSubject" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Value"></label>
                <input asp-for="Value" class="form-control" />
                <span asp-validation-for="Value" class="text-danger"></span>
            </div>
            <select asp-for="ExpenseCategory"
                    asp-items="Html.GetEnumSelectList<ExpenseCategory>()"
                    class="form-control chosen-select">
                <option>ExpenseCategory</option>
            </select>
            <select asp-for="DebitorsCollection"
                    asp-items="@Model.FlatmatesCollection"
                    class="form-control chosen-select" multiple="multiple">
                <option>Please select debitors</option>
            </select>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}